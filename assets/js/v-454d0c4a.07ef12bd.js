"use strict";(self.webpackChunknode_docs=self.webpackChunknode_docs||[]).push([[6167],{5292:(n,s,a)=>{a.r(s),a.d(s,{data:()=>t});const t=JSON.parse('{"key":"v-454d0c4a","path":"/node-lessons/lesson11.html","title":"11.benchmark 怎么写","lang":"zh-CN","frontmatter":{"order":11,"description":"目标 有一个字符串 let number = \'100\'，我们要将它转换成 Number 类型的 100。 目前有三个选项：+, parseInt, Number 请测试哪个方法更快。 知识点 1. 学习使用 benchmark 库 2. 学习使用 分享你的 benchmark 课程内容 首先去弄个 benchmark 库， 。 这个库已经两年没有更新...","head":[["meta",{"property":"og:url","content":"https://yzqdev.github.io/node-docs/node-docs/node-lessons/lesson11.html"}],["meta",{"property":"og:site_name","content":"node-docs"}],["meta",{"property":"og:title","content":"11.benchmark 怎么写"}],["meta",{"property":"og:description","content":"目标 有一个字符串 let number = \'100\'，我们要将它转换成 Number 类型的 100。 目前有三个选项：+, parseInt, Number 请测试哪个方法更快。 知识点 1. 学习使用 benchmark 库 2. 学习使用 分享你的 benchmark 课程内容 首先去弄个 benchmark 库， 。 这个库已经两年没有更新..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2022-03-26T15:48:25.000Z"}],["meta",{"property":"article:modified_time","content":"2022-03-26T15:48:25.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"11.benchmark 怎么写\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2022-03-26T15:48:25.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"目标","slug":"目标","link":"#目标","children":[]},{"level":2,"title":"知识点","slug":"知识点","link":"#知识点","children":[]},{"level":2,"title":"课程内容","slug":"课程内容","link":"#课程内容","children":[{"level":3,"title":"在线分享","slug":"在线分享","link":"#在线分享","children":[]}]}],"git":{"createdTime":1648309705000,"updatedTime":1648309705000,"contributors":[{"name":"yzqdev","email":"yzqdev@outlook.com","commits":1}]},"readingTime":{"minutes":1.62,"words":486},"filePathRelative":"node-lessons/lesson11.md","localizedDate":"2022年3月26日","autoDesc":true,"excerpt":""}')},8441:(n,s,a)=>{a.r(s),a.d(s,{default:()=>h});var t=a(6808);const p=(0,t.uE)('<h1 id="_11-benchmark-怎么写" tabindex="-1"><a class="header-anchor" href="#_11-benchmark-怎么写" aria-hidden="true">#</a> 11.benchmark 怎么写</h1><h2 id="目标" tabindex="-1"><a class="header-anchor" href="#目标" aria-hidden="true">#</a> 目标</h2><p>有一个字符串 <code>let number = &#39;100&#39;</code>，我们要将它转换成 Number 类型的 100。</p><p>目前有三个选项：+, parseInt, Number</p><p>请测试哪个方法更快。</p><h2 id="知识点" tabindex="-1"><a class="header-anchor" href="#知识点" aria-hidden="true">#</a> 知识点</h2>',6),e=(0,t._)("li",null,"学习使用 benchmark 库",-1),o={href:"http://jsperf.com/",target:"_blank",rel:"noopener noreferrer"},c=(0,t._)("h2",{id:"课程内容",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#课程内容","aria-hidden":"true"},"#"),(0,t.Uk)(" 课程内容")],-1),i={href:"https://github.com/bestiejs/benchmark.js",target:"_blank",rel:"noopener noreferrer"},l=(0,t.uE)('<p>这个库已经两年没有更新了，两年前发了个 1.0.0 版本，直到现在。</p><p>这个库的最新版本是 2.1.4</p><p>用法也特别简单，照着官网的 copy 下来就好。</p><p>我们先来实现这三个函数：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> <span class="token function-variable function">int1</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token operator">+</span>str<span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">let</span> <span class="token function-variable function">int2</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">let</span> <span class="token function-variable function">int3</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token function">Number</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后照着官方的模板写 benchmark suite：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> number <span class="token operator">=</span> <span class="token string">&#39;100&#39;</span><span class="token punctuation">;</span>\n\n<span class="token comment">// 添加测试</span>\nsuite\n<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&#39;+&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token function">int1</span><span class="token punctuation">(</span>number<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&#39;parseInt&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token function">int2</span><span class="token punctuation">(</span>number<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&#39;Number&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token function">int3</span><span class="token punctuation">(</span>number<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token comment">// 每个测试跑完后，输出信息</span>\n<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;cycle&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">String</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>target<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;complete&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Fastest is &#39;</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token string">&#39;fastest&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token comment">// 这里的 async 不是 mocha 测试那个 async 的意思，这个选项与它的时间计算有关，默认勾上就好了。</span>\n<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token string-property property">&#39;async&#39;</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>直接运行：</p><p><img src="https://raw.githubusercontent.com/alsotang/node-lessons/master/lesson10/1.png" alt=""></p><p>可以看到，parseInt 是最快的。</p><h3 id="在线分享" tabindex="-1"><a class="header-anchor" href="#在线分享" aria-hidden="true">#</a> 在线分享</h3>',11),u={href:"http://jsperf.com/",target:"_blank",rel:"noopener noreferrer"},r=(0,t._)("p",null,[(0,t.Uk)("比如我在上面测试 "),(0,t._)("code",null,"Math.log"),(0,t.Uk)(" 的效率：")],-1),k={href:"http://jsperf.com/math-perf-alsotang",target:"_blank",rel:"noopener noreferrer"},d=(0,t._)("p",null,[(0,t.Uk)("进入之后点击那个 "),(0,t._)("code",null,"Run tests"),(0,t.Uk)(" 按钮，就可以在浏览器中看到它们的效率差异了，毕竟浏览器也是可以跑 js 的。")],-1),m={href:"http://jsperf.com/math-perf-alsotang/edit",target:"_blank",rel:"noopener noreferrer"},v=(0,t.uE)('<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> Benchmark <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;benchmark&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">let</span> suite <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Benchmark<span class="token punctuation">.</span>Suite</span><span class="token punctuation">;</span>\n\n<span class="token keyword">let</span> <span class="token function-variable function">int1</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token operator">+</span>str<span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">let</span> <span class="token function-variable function">int2</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">let</span> <span class="token function-variable function">int3</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token function">Number</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">let</span> number <span class="token operator">=</span> <span class="token string">&#39;100&#39;</span><span class="token punctuation">;</span>\n\n<span class="token comment">// add tests</span>\nsuite\n<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&#39;+&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token function">int1</span><span class="token punctuation">(</span>number<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&#39;parseInt&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token function">int2</span><span class="token punctuation">(</span>number<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&#39;Number&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token function">int3</span><span class="token punctuation">(</span>number<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token comment">// add listeners</span>\n<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;cycle&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">String</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>target<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;complete&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Fastest is &#39;</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token string">&#39;fastest&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token comment">// run async</span>\n<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token string-property property">&#39;async&#39;</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',1),b={},h=(0,a(8580).Z)(b,[["render",function(n,s){const a=(0,t.up)("ExternalLinkIcon");return(0,t.wg)(),(0,t.iD)("div",null,[p,(0,t._)("ol",null,[e,(0,t._)("li",null,[(0,t.Uk)("学习使用 "),(0,t._)("a",o,[(0,t.Uk)("http://jsperf.com/"),(0,t.Wm)(a)]),(0,t.Uk)(" 分享你的 benchmark")])]),c,(0,t._)("p",null,[(0,t.Uk)("首先去弄个 benchmark 库，"),(0,t._)("a",i,[(0,t.Uk)("https://github.com/bestiejs/benchmark.js"),(0,t.Wm)(a)]),(0,t.Uk)(" 。")]),l,(0,t._)("p",null,[(0,t.Uk)("如果想要在线分享你的 js benchmark，用这个网站："),(0,t._)("a",u,[(0,t.Uk)("http://jsperf.com/"),(0,t.Wm)(a)]),(0,t.Uk)(" 。")]),r,(0,t._)("p",null,[(0,t._)("a",k,[(0,t.Uk)("http://jsperf.com/math-perf-alsotang"),(0,t.Wm)(a)])]),d,(0,t._)("p",null,[(0,t.Uk)("点击这里："),(0,t._)("a",m,[(0,t.Uk)("http://jsperf.com/math-perf-alsotang/edit"),(0,t.Wm)(a)]),(0,t.Uk)(" ，就可以看到这个 benchmark 是怎么配置的，很简单。")]),v])}]])},8580:(n,s)=>{s.Z=(n,s)=>{const a=n.__vccOpts||n;for(const[n,t]of s)a[n]=t;return a}}}]);