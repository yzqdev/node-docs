"use strict";(self.webpackChunknode_docs=self.webpackChunknode_docs||[]).push([[8436],{8737:(n,s,a)=>{a.r(s),a.d(s,{data:()=>t});const t=JSON.parse('{"key":"v-24f8e9c3","path":"/node-lessons/lesson4.html","title":"4.使用 superagent 与 cheerio 完成简单爬虫","lang":"zh-CN","frontmatter":{"order":4,"description":"目标 建立一个 lesson3 项目，在其中编写代码。 当在浏览器中访问 http://localhost:3000/ 时，输出 CNode( ) 社区首页的所有帖子标题和链接，以 json 的形式。 输出示例： 挑战 访问 http://localhost:3000/ 时，输出包括主题的作者， 示例： 知识点 1. 学习使用 superagent 抓...","head":[["meta",{"property":"og:url","content":"https://yzqdev.github.io/node-docs/node-docs/node-lessons/lesson4.html"}],["meta",{"property":"og:site_name","content":"node-docs"}],["meta",{"property":"og:title","content":"4.使用 superagent 与 cheerio 完成简单爬虫"}],["meta",{"property":"og:description","content":"目标 建立一个 lesson3 项目，在其中编写代码。 当在浏览器中访问 http://localhost:3000/ 时，输出 CNode( ) 社区首页的所有帖子标题和链接，以 json 的形式。 输出示例： 挑战 访问 http://localhost:3000/ 时，输出包括主题的作者， 示例： 知识点 1. 学习使用 superagent 抓..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2022-03-26T15:48:25.000Z"}],["meta",{"property":"article:modified_time","content":"2022-03-26T15:48:25.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"4.使用 superagent 与 cheerio 完成简单爬虫\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2022-03-26T15:48:25.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"目标","slug":"目标","link":"#目标","children":[]},{"level":2,"title":"挑战","slug":"挑战","link":"#挑战","children":[]},{"level":2,"title":"知识点","slug":"知识点","link":"#知识点","children":[]},{"level":2,"title":"课程内容","slug":"课程内容","link":"#课程内容","children":[]}],"git":{"createdTime":1648309705000,"updatedTime":1648309705000,"contributors":[{"name":"yzqdev","email":"yzqdev@outlook.com","commits":1}]},"readingTime":{"minutes":2.47,"words":741},"filePathRelative":"node-lessons/lesson4.md","localizedDate":"2022年3月26日","autoDesc":true,"excerpt":""}')},9763:(n,s,a)=>{a.r(s),a.d(s,{default:()=>v});var t=a(6808);const e=(0,t._)("h1",{id:"_4-使用-superagent-与-cheerio-完成简单爬虫",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_4-使用-superagent-与-cheerio-完成简单爬虫","aria-hidden":"true"},"#"),(0,t.Uk)(" 4.使用 superagent 与 cheerio 完成简单爬虫")],-1),p=(0,t._)("h2",{id:"目标",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#目标","aria-hidden":"true"},"#"),(0,t.Uk)(" 目标")],-1),o=(0,t._)("p",null,"建立一个 lesson3 项目，在其中编写代码。",-1),c=(0,t._)("code",null,"http://localhost:3000/",-1),i={href:"https://cnodejs.org/",target:"_blank",rel:"noopener noreferrer"},l=(0,t.uE)('<p>输出示例：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    <span class="token string-property property">&quot;title&quot;</span><span class="token operator">:</span> <span class="token string">&quot;【公告】发招聘帖的同学留意一下这里&quot;</span><span class="token punctuation">,</span>\n    <span class="token string-property property">&quot;href&quot;</span><span class="token operator">:</span> <span class="token string">&quot;http://cnodejs.org/topic/541ed2d05e28155f24676a12&quot;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    <span class="token string-property property">&quot;title&quot;</span><span class="token operator">:</span> <span class="token string">&quot;发布一款 Sublime Text 下的 JavaScript 语法高亮插件&quot;</span><span class="token punctuation">,</span>\n    <span class="token string-property property">&quot;href&quot;</span><span class="token operator">:</span> <span class="token string">&quot;http://cnodejs.org/topic/54207e2efffeb6de3d61f68f&quot;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">]</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="挑战" tabindex="-1"><a class="header-anchor" href="#挑战" aria-hidden="true">#</a> 挑战</h2><p>访问 <code>http://localhost:3000/</code> 时，输出包括主题的作者，</p><p>示例：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    <span class="token string-property property">&quot;title&quot;</span><span class="token operator">:</span> <span class="token string">&quot;【公告】发招聘帖的同学留意一下这里&quot;</span><span class="token punctuation">,</span>\n    <span class="token string-property property">&quot;href&quot;</span><span class="token operator">:</span> <span class="token string">&quot;http://cnodejs.org/topic/541ed2d05e28155f24676a12&quot;</span><span class="token punctuation">,</span>\n    <span class="token string-property property">&quot;author&quot;</span><span class="token operator">:</span> <span class="token string">&quot;alsotang&quot;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    <span class="token string-property property">&quot;title&quot;</span><span class="token operator">:</span> <span class="token string">&quot;发布一款 Sublime Text 下的 JavaScript 语法高亮插件&quot;</span><span class="token punctuation">,</span>\n    <span class="token string-property property">&quot;href&quot;</span><span class="token operator">:</span> <span class="token string">&quot;http://cnodejs.org/topic/54207e2efffeb6de3d61f68f&quot;</span><span class="token punctuation">,</span>\n    <span class="token string-property property">&quot;author&quot;</span><span class="token operator">:</span> <span class="token string">&quot;otheruser&quot;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">]</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="知识点" tabindex="-1"><a class="header-anchor" href="#知识点" aria-hidden="true">#</a> 知识点</h2><ol><li>学习使用 superagent 抓取网页</li><li>学习使用 cheerio 分析网页</li></ol><h2 id="课程内容" tabindex="-1"><a class="header-anchor" href="#课程内容" aria-hidden="true">#</a> 课程内容</h2><p>Node.js 总是吹牛逼说自己异步特性多么多么厉害，但是对于初学者来说，要找一个能好好利用异步的场景不容易。我想来想去，爬虫的场景就比较适合，没事就异步并发地爬几个网站玩玩。</p><p>本来想教大家怎么爬 github 的 api 的，但是 github 有 rate limit 的限制，所以只好牺牲一下 CNode 社区（国内最专业的 Node.js 开源技术社区），教大家怎么去爬它了。</p><p>我们这回需要用到三个依赖，分别是 express，superagent 和 cheerio。</p><p>先介绍一下，</p>',13),u={href:"http://visionmedia.github.io/superagent/",target:"_blank",rel:"noopener noreferrer"},r={href:"https://github.com/cheeriojs/cheerio",target:"_blank",rel:"noopener noreferrer"},k=(0,t.uE)('<p>还记得我们怎么新建一个项目吗？</p><ol><li>新建一个文件夹，进去之后 <code>npm init</code></li><li>安装依赖 <code>npm install --save PACKAGE_NAME</code></li><li>写应用逻辑</li></ol><p>我们应用的核心逻辑长这样</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>app<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 用 superagent 去抓取 https://cnodejs.org/ 的内容</span>\n  superagent<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;https://cnodejs.org/&#39;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> sres</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token comment">// 常规的错误处理</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token function">next</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n      <span class="token comment">// sres.text 里面存储着网页的 html 内容，将它传给 cheerio.load 之后</span>\n      <span class="token comment">// 就可以得到一个实现了 jquery 接口的变量，我们习惯性地将它命名为 `$`</span>\n      <span class="token comment">// 剩下就都是 jquery 的内容了</span>\n      <span class="token keyword">let</span> $ <span class="token operator">=</span> cheerio<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>sres<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token keyword">let</span> items <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n      <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#topic_list .topic_title&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">idx<span class="token punctuation">,</span> element</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">let</span> $element <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        items<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n          <span class="token literal-property property">title</span><span class="token operator">:</span> $element<span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">&#39;title&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">href</span><span class="token operator">:</span> $element<span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">&#39;href&#39;</span><span class="token punctuation">)</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n      res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>items<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>OK，一个简单的爬虫就是这么简单。这里我们还没有利用到 Node.js 的异步并发特性。不过下两章内容都是关于异步控制的。</p><p>记得好好看看 superagent 的 API，它把链式调用的风格玩到了极致。</p><blockquote><p>源码</p></blockquote><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> express <span class="token keyword">from</span> <span class="token string">&#39;express&#39;</span>\n<span class="token keyword">import</span> cheerio <span class="token keyword">from</span> <span class="token string">&#39;cheerio&#39;</span>\n<span class="token keyword">import</span> superagent <span class="token keyword">from</span> <span class="token string">&#39;superagent&#39;</span>\n\n<span class="token keyword">let</span> app <span class="token operator">=</span> <span class="token function">express</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\napp<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  superagent<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;https://cnodejs.org/&#39;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> sres</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token function">next</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n      <span class="token keyword">let</span> $ <span class="token operator">=</span> cheerio<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>sres<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token keyword">let</span> items <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n      <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#topic_list .topic_title&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">idx<span class="token punctuation">,</span> element</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">let</span> $element <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        items<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n          <span class="token literal-property property">title</span><span class="token operator">:</span> $element<span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">&#39;title&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">href</span><span class="token operator">:</span> $element<span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">&#39;href&#39;</span><span class="token punctuation">)</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n      res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>items<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n\napp<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;app is listening at port 3000&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',8),d={},v=(0,a(8580).Z)(d,[["render",function(n,s){const a=(0,t.up)("ExternalLinkIcon");return(0,t.wg)(),(0,t.iD)("div",null,[e,p,o,(0,t._)("p",null,[(0,t.Uk)("当在浏览器中访问 "),c,(0,t.Uk)(" 时，输出 CNode("),(0,t._)("a",i,[(0,t.Uk)("https://cnodejs.org/"),(0,t.Wm)(a)]),(0,t.Uk)(" ) 社区首页的所有帖子标题和链接，以 json 的形式。")]),l,(0,t._)("p",null,[(0,t._)("a",u,[(0,t.Uk)("superagent"),(0,t.Wm)(a)]),(0,t.Uk)(" 是个 http 方面的库，可以发起 get 或 post 请求。")]),(0,t._)("p",null,[(0,t._)("a",r,[(0,t.Uk)("cheerio"),(0,t.Wm)(a)]),(0,t.Uk)(" 大家可以理解成一个 Node.js 版的 jquery，用来从网页中以 css selector 取数据，使用方式跟 jquery 一样一样的。")]),k])}]])},8580:(n,s)=>{s.Z=(n,s)=>{const a=n.__vccOpts||n;for(const[n,t]of s)a[n]=t;return a}}}]);